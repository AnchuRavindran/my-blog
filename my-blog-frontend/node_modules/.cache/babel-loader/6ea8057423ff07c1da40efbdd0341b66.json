{"ast":null,"code":"var _jsxFileName = \"D:\\\\react\\\\my-blog\\\\my-blog-frontend\\\\src\\\\pages\\\\Article\\\\ArticlePage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router';\nimport './Article.css';\nimport articleContent from './SampleArticleDB';\nimport Error from '../error/Error';\nimport Comments from './comments';\nimport AddComments from './AddComments';\nimport UpvoteSection from './UpvoteSection';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ArticlePage(props) {\n  _s();\n\n  const {\n    name\n  } = useParams(); // Temporary storage of DB data\n\n  const [articleData, setarticleData] = useState({\n    upvotes: 0,\n    comments: []\n  });\n  const article = articleContent.find(i => i.name === name); //looking for matching name in db\n  // Backend Connection API Fetch\n\n  useEffect(() => {\n    fetchAPI();\n  }, [name]);\n\n  async function fetchAPI() {\n    const response = await fetch(`/api/article/${name}`);\n    const body = await response.json();\n    console.log(body);\n    setarticleData(body);\n  } // Article Not Exist in DB\n\n\n  if (!article) return /*#__PURE__*/_jsxDEV(Error, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 25\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 31\n    }, this), /*#__PURE__*/_jsxDEV(\"center\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        id: \"article\",\n        children: [\" \", article.title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(UpvoteSection, {\n      name: name,\n      setarticleData: setarticleData,\n      upvotes: articleData.upvotes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: article.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Comments, {\n      comments: articleData.comments\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(AddComments, {\n      name: name,\n      setarticleData: setarticleData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ArticlePage, \"W8B2AVRCIYhG1E2DwTSAoqw6b44=\", false, function () {\n  return [useParams];\n});\n\n_c = ArticlePage;\nexport default ArticlePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ArticlePage\");","map":{"version":3,"sources":["D:/react/my-blog/my-blog-frontend/src/pages/Article/ArticlePage.js"],"names":["React","useEffect","useState","useParams","articleContent","Error","Comments","AddComments","UpvoteSection","ArticlePage","props","name","articleData","setarticleData","upvotes","comments","article","find","i","fetchAPI","response","fetch","body","json","console","log","title","description"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,OAAO,eAAP;AACA,OAAOC,cAAP,MAA2B,mBAA3B;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;;AAIA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAAA;;AACxB,QAAM;AAAEC,IAAAA;AAAF,MAAWR,SAAS,EAA1B,CADwB,CAGxB;;AACA,QAAM,CAACS,WAAD,EAAcC,cAAd,IAAgCX,QAAQ,CAAC;AAAEY,IAAAA,OAAO,EAAE,CAAX;AAAcC,IAAAA,QAAQ,EAAE;AAAxB,GAAD,CAA9C;AAEA,QAAMC,OAAO,GAAGZ,cAAc,CAACa,IAAf,CAAoBC,CAAC,IAAIA,CAAC,CAACP,IAAF,KAAWA,IAApC,CAAhB,CANwB,CAMkC;AAE1D;;AACAV,EAAAA,SAAS,CAAC,MAAM;AACZkB,IAAAA,QAAQ;AACX,GAFQ,EAEN,CAACR,IAAD,CAFM,CAAT;;AAIA,iBAAeQ,QAAf,GAA0B;AACtB,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,gBAAeV,IAAK,EAAtB,CAA5B;AACA,UAAMW,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACAT,IAAAA,cAAc,CAACS,IAAD,CAAd;AAEH,GAnBuB,CAsBvB;;;AACD,MAAG,CAACN,OAAJ,EAAa,oBAAO,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA,YADJ,eACU;AAAA;AAAA;AAAA;AAAA,YADV,eACgB;AAAA;AAAA;AAAA;AAAA,YADhB,eACsB;AAAA;AAAA;AAAA;AAAA,YADtB,eAGQ;AAAA,6BAAQ;AAAI,QAAA,EAAE,EAAC,SAAP;AAAA,wBAAmBA,OAAO,CAACU,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAR;AAAA;AAAA;AAAA;AAAA,YAHR,eAIQ,QAAC,aAAD;AAAe,MAAA,IAAI,EAAEf,IAArB;AAA2B,MAAA,cAAc,EAAEE,cAA3C;AAA2D,MAAA,OAAO,EAAED,WAAW,CAACE;AAAhF;AAAA;AAAA;AAAA;AAAA,YAJR,eAKQ;AAAA;AAAA;AAAA;AAAA,YALR,eAKc;AAAA;AAAA;AAAA;AAAA,YALd,eAMQ;AAAA,gBAAIE,OAAO,CAACW;AAAZ;AAAA;AAAA;AAAA;AAAA,YANR,eAOQ,QAAC,QAAD;AAAU,MAAA,QAAQ,EAAEf,WAAW,CAACG;AAAhC;AAAA;AAAA;AAAA;AAAA,YAPR,eAQQ,QAAC,WAAD;AAAa,MAAA,IAAI,EAAEJ,IAAnB;AAAyB,MAAA,cAAc,EAAEE;AAAzC;AAAA;AAAA;AAAA;AAAA,YARR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH;;GArCQJ,W;UACYN,S;;;KADZM,W;AAuCT,eAAeA,WAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport './Article.css';\r\nimport articleContent from './SampleArticleDB';\r\nimport Error from '../error/Error'\r\nimport Comments from './comments';\r\nimport AddComments from './AddComments';\r\nimport UpvoteSection from './UpvoteSection';\r\n\r\n\r\n\r\nfunction ArticlePage(props) {\r\n    const { name } = useParams();\r\n\r\n    // Temporary storage of DB data\r\n    const [articleData, setarticleData] = useState({ upvotes: 0, comments: [] });\r\n\r\n    const article = articleContent.find(i => i.name === name) //looking for matching name in db\r\n\r\n    // Backend Connection API Fetch\r\n    useEffect(() => {\r\n        fetchAPI();\r\n    }, [name]);\r\n\r\n    async function fetchAPI() {\r\n        const response = await fetch(`/api/article/${name}`);\r\n        const body = await response.json();\r\n        console.log(body);\r\n        setarticleData(body);\r\n\r\n    }\r\n\r\n\r\n     // Article Not Exist in DB\r\n    if(!article) return <Error />\r\n    return(\r\n        <div>\r\n            <br /><br /><br /><br />\r\n               \r\n                <center><h1 id='article'> {article.title}</h1></center>\r\n                <UpvoteSection name={name} setarticleData={setarticleData} upvotes={articleData.upvotes} />\r\n                <br /><br />\r\n                <p>{article.description}</p>\r\n                <Comments comments={articleData.comments} />\r\n                <AddComments name={name} setarticleData={setarticleData} />\r\n            \r\n        </div>\r\n    );   \r\n}\r\n\r\nexport default ArticlePage;"]},"metadata":{},"sourceType":"module"}